{"version":3,"sources":["components/Header.js","components/Quote.js","components/Countdown.js","Stock/Stock.js","App.js","index.js"],"names":["Header","state","isClicked","inputClick","doesShow","setState","console","log","onBlur","this","style","blackHeader","className","type","placeholder","onClick","onKeyDown","props","inputHandler","secondFetch","React","Component","color","backgroundColor","padding","letterSpacing","paddingBottom","Quote","symbolName","name","id","YearHigh","YearLow","volume","closePrice","changeP","Countdown","count","message","intervalChange","myInterval","setInterval","clearInterval","countNumbStyleTrue","countNumbStyleFalse","isNotZero","isZero","fontSize","marginBottom","opacity","fontStyle","Stock","stockChartXValues","stockChartYValues","open","symbol","changePercent","close","searchKeyword","componentDidMount","fetchStock","fetchQuote","fetchCompanyOverview","API_CAll","API_KEY","stockXValuesArray","stockYValuesArray","fetch","then","res","json","data","timeSeries","Object","keys","date","Number","toLocaleString","push","catch","err","API_CALL2","API_CALL3","companyName","Name","changeKeyword","event","a","value","target","key","searchStock","bind","inputValue","didSearch","x","y","mode","marker","fill","layout","width","height","title","config","displayModeBar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3aba7c09.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Stock/Stock.css'\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        isClicked: false\r\n    }\r\n\r\n    inputClick = () => {\r\n        const doesShow = this.state.isClicked;\r\n        this.setState({\r\n            isClicked: !doesShow\r\n        })\r\n        console.log(this.state.isClicked)\r\n    }\r\n\r\n    onBlur = () => {\r\n        this.setState({\r\n            isClicked: false\r\n        })\r\n}\r\n\r\n    render() {\r\n        const { isClicked } = this.state;\r\n\r\n        return (\r\n            <div style={blackHeader}>\r\n                <h1 className='header-h1'>React Stock Market</h1>\r\n                <p>Stock Market API</p>\r\n                <div className='wrapper'>\r\n                    <input className={`header-input ${isClicked ? 'clicked-input' : ''}`}\r\n                           type=\"text\"\r\n                           placeholder='Pick a stock (e.g. BABA, ZM, AAPL, GOLD)'\r\n                           onClick={this.inputClick}\r\n                           onBlur={this.onBlur}\r\n                           onKeyDown={this.props.inputHandler}\r\n                        // value={this.props.inputValue}\r\n                    />\r\n                    <i\r\n                        onClick={this.props.secondFetch}\r\n                        className='fas fa-search fa-2x'>\r\n                    </i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst blackHeader = {\r\n    color: '#ffffff',\r\n    backgroundColor: '#252529',\r\n    padding: '1.2rem',\r\n    letterSpacing: '2px',\r\n    paddingBottom: '2rem'\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../Stock/Stock.css'\r\n\r\nclass Quote extends Component {\r\n    render() {\r\n        return (\r\n            <div className='quotes-container'>\r\n                <h1>{this.props.symbolName} - {this.props.name} </h1>\r\n                <p className='box-items'> <span className='quotes' id=''>52 Week High</span> <span className='year-high'>{this.props.YearHigh}</span></p>\r\n                <p className='box-items'> <span className='quotes' id=''>52 Week Low</span> <span className='year-low'>{this.props.YearLow}</span></p>\r\n                <p className='box-items'> <span className='quotes' id=''>Volume</span> <span className='blue-data'>{this.props.volume}</span></p>\r\n                <p className='box-items'> <span className='quotes' id=''>Close</span> <span className='blue-data'>{this.props.closePrice}</span></p>\r\n                <p className='box-items'> <span className='quotes' id=''>Changed Percent</span> <span className='blue-data'>{this.props.changeP}</span></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quote;","import React, {Component} from 'react';\r\n\r\nclass Countdown extends Component {\r\n    state = {\r\n        count: 20,\r\n        message: 'Only 5 API requests per minute allowed...'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.intervalChange();\r\n    }\r\n\r\n    intervalChange = () => {\r\n        let myInterval = setInterval(() => {\r\n            if(this.state.count === 0){\r\n                clearInterval(myInterval);\r\n                this.setState({message: 'Search a new stock!'});\r\n            } else\r\n            this.setState({\r\n                count: this.state.count - 1\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='countdown-div'>\r\n                {this.state.count > 0 ? <h1 style={countNumbStyleTrue}>{this.state.count}</h1>\r\n                    : <h1 style={countNumbStyleFalse}>{this.state.count}</h1>}\r\n\r\n                {this.state.count > 0 ? <h1 className='h1-message' style={isNotZero}>{this.state.message}</h1>\r\n                    : <h1 className='h1-message' style={isZero}>{this.state.message}</h1>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst countNumbStyleTrue = {\r\n    fontSize: '3rem',\r\n    marginBottom: '-0.4rem'\r\n}\r\n\r\nconst countNumbStyleFalse = {\r\n    opacity: '0'\r\n}\r\n\r\nconst isZero= {\r\n    color: '#FF0000',\r\n    fontStyle: 'bolder',\r\n    fontSize: '2.2rem'\r\n}\r\n\r\nconst isNotZero = {\r\n    color: '#000'\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport Header from \"../components/Header\";\r\nimport Quote from \"../components/Quote\";\r\nimport Countdown from \"../components/Countdown\";\r\n\r\nclass Stock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.API_KEY = 'FXJPC8WQRZ2JZN9O';\r\n        this.changeKeyword = this.changeKeyword.bind(this);\r\n    }\r\n\r\n    state = {\r\n        stockChartXValues: [],\r\n        stockChartYValues: [],\r\n        open: 0,\r\n        volume: 0,\r\n        symbol: '',\r\n        changePercent: 0,\r\n        close: 0,\r\n        YearHigh: 0,\r\n        YearLow: 0,\r\n        name: '',\r\n        searchKeyword: 'TSLA'\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.fetchStock();\r\n        this.fetchQuote();\r\n        this.fetchCompanyOverview();\r\n    }\r\n\r\n    fetchStock = () => {\r\n        const API_CAll = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${this.state.searchKeyword}&outputsize=compact&apikey=${this.API_KEY}`\r\n        let stockXValuesArray = [];\r\n        let stockYValuesArray = [];\r\n\r\n        fetch(API_CAll)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                const timeSeries = data['Time Series (Daily)'];\r\n                // console.log(typeof timeSeries) is an object, we need\r\n                // to transform it into an array to loop through it\r\n                let volume = timeSeries[Object.keys(timeSeries)[0]]['6. volume'] //latest value\r\n                volume = Number(volume).toLocaleString();\r\n                console.log(volume)\r\n\r\n                for(let date in timeSeries) {\r\n                    stockXValuesArray.push(date);\r\n                    stockYValuesArray.push(timeSeries[date]['1. open']);\r\n                }\r\n\r\n                this.setState({\r\n                    stockChartXValues : stockXValuesArray,\r\n                    stockChartYValues : stockYValuesArray,\r\n                    volume: volume\r\n                }, function () {\r\n                    console.log('fetching data is done!')\r\n                })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    fetchQuote = () => {\r\n        const API_CALL2 = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${this.state.searchKeyword}&apikey=${this.API_KEY}`\r\n\r\n        fetch(API_CALL2)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                let symbol = data[\"Global Quote\"][\"01. symbol\"]\r\n                let changePercent = data[\"Global Quote\"][\"10. change percent\"]\r\n                let close = data[\"Global Quote\"][\"02. open\"]\r\n\r\n            this.setState({\r\n                symbol: symbol,\r\n                changePercent: changePercent,\r\n                close: close\r\n            })\r\n            })\r\n            .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    fetchCompanyOverview = () => {\r\n        const API_CALL3 = `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${this.state.searchKeyword}&apikey=${this.API_KEY}`\r\n\r\n        fetch(API_CALL3)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const YearHigh = data[\"52WeekHigh\"];\r\n                const YearLow = data[\"52WeekLow\"]\r\n                const companyName = data.Name\r\n\r\n                console.log(data)\r\n                console.log(companyName)\r\n\r\n                this.setState({\r\n                    YearHigh: YearHigh,\r\n                    YearLow: YearLow,\r\n                    name: companyName\r\n                })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    changeKeyword = async (event) => {\r\n        const { value } = event.target;\r\n        if (event.key === 'Enter') {\r\n            this.setState({\r\n                searchKeyword: value\r\n            });\r\n            await console.log(this.state.searchKeyword)\r\n            await console.log(this.state.searchStock)\r\n            await this.secondFetch();\r\n            await console.log('Enter key pressed')\r\n        }\r\n    }\r\n\r\n    secondFetch = () => {\r\n        this.fetchStock();\r\n        this.fetchQuote();\r\n        this.fetchCompanyOverview();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header\r\n                inputHandler={this.changeKeyword}\r\n                inputValue={this.state.searchKeyword}\r\n                secondFetch={this.secondFetch}\r\n                />\r\n                <Countdown didSearch={this.state.searchStock}/>\r\n                <Quote\r\n                    symbolName={this.state.symbol}\r\n                    YearHigh={this.state.YearHigh}\r\n                    YearLow={this.state.YearLow}\r\n                    changeP={this.state.changePercent}\r\n                    closePrice={this.state.close}\r\n                    volume={this.state.volume}\r\n                    name={this.state.name}\r\n                />\r\n                {/* PLotly.js library */}\r\n                <Plot\r\n                    data={[\r\n                        {\r\n                            x: this.state.stockChartXValues,\r\n                            y: this.state.stockChartYValues,\r\n                            type: 'scatter',\r\n                            mode: 'lines',\r\n                            marker: {color: 'blue'},\r\n                            fill: 'tonexty'\r\n                        }\r\n                    ]}\r\n                    layout={ {width: 1000, height: 600, title: \"\"} }\r\n                    config={{displayModeBar: false}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Stock;\r\n\r\n\r\n","import React from 'react';\nimport './Stock/Stock.css';\nimport Stock from \"./Stock/Stock\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stock />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}